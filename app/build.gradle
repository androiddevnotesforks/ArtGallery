plugins {
    id 'com.google.devtools.ksp' version '1.7.22-1.0.8'
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    signingConfigs {
        release {
            storeFile file('release_app')
            storePassword 'j35u5777'
            keyAlias 'ArtGallery'
            keyPassword 'j35u5777'
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.nucu.dynamiclistcompose"
        minSdk 26
        targetSdk 33
        versionCode 7
        versionName "1.1.1"

        testInstrumentationRunner = "com.nucu.dynamiclistcompose.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.release
    }

    lint {
        baseline = file("lint-baseline.xml")
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += [
                    '/META-INF/{AL2.0,LGPL2.1}',
                    'META-INF/DEPENDENCIES',
                    'META-INF/LICENSE',
                    'META-INF/LICENSE.txt',
                    'META-INF/license.txt',
                    'META-INF/NOTICE',
                    'META-INF/NOTICE.txt',
                    'META-INF/notice.txt',
                    'META-INF/ASL2.0',
                    'META-INF/*.kotlin_module',
                    'META-INF/gradle/incremental.annotation.processors'
            ]
        }
    }
    namespace 'com.nucu.dynamiclistcompose'

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation project(":design-system")

    // Home Page
    implementation project(":home:api")
    implementation project(":home:impl")
    implementation project(":home:wiring")

    // Cards Page
    implementation project(":cards-page:api")
    implementation project(":cards-page:impl")
    implementation project(":cards-page:wiring")

    // Places Page
    implementation project(":places-page:api")
    implementation project(":places-page:impl")
    implementation project(":places-page:wiring")

    // Product Detail Page
    implementation project(":product-detail:api")
    implementation project(":product-detail:impl")
    implementation project(":product-detail:wiring")

    // Navigation
    implementation project(":navigation:api")
    implementation project(":navigation:impl")
    implementation project(":navigation:wiring")

    // Preferences
    implementation(project(":preferences:api"))
    implementation(project(":preferences:impl"))
    implementation(project(":preferences:wiring"))

    // Basket
    implementation(project(":basket:api"))
    implementation(project(":basket:impl"))
    implementation(project(":basket:wiring"))

    // Hilt
    implementation(libs.hilt)
    kapt(libs.hilt.compiler)

    // Navigation
    implementation(libs.navigation.destinations.core)
    implementation(libs.navigation.destinations.animations.core)
    ksp(libs.navigation.destinations.compiler)

    // System UI Controller
    implementation(libs.accompanist.systemuicontroller)

    // Navigation
    implementation(libs.hilt.navigation.compose)

    // Alpha
    implementation("androidx.compose.material3:material3-window-size-class:1.0.1")
    implementation("androidx.compose.material3:material3:1.0.1")

    // Compose
    implementation(libs.compose.ui)
    implementation(libs.compose.material)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.compose.activity)
    implementation(libs.compose.constraintlayout)
    implementation(libs.compose.lifecycle.viewmodel)
    implementation(libs.compose.lifecycle.runtime)
    implementation(libs.compose.lifecycle.runtime.ktx)
    implementation(libs.androidx.core)

    // Test
    testImplementation(libs.test.turbine)
    testImplementation(libs.test.mockito)
    testImplementation(libs.test.mockito.inline)
    testImplementation(libs.test.kotlin.coroutines)
    testImplementation(libs.test.junit)
    testImplementation(libs.test.json)

    kaptAndroidTest(libs.test.android.hilt.kapt)

    // Performance
    debugImplementation(libs.debug.leak.canary)
    implementation(libs.androidx.metrics.performance)

    // Android Test
    androidTestImplementation(libs.test.android.hilt)
    androidTestImplementation(libs.test.mockito)
    androidTestImplementation(libs.test.android.mockito)
    androidTestImplementation(libs.test.junit)
    androidTestImplementation(libs.test.android.espresso)
    androidTestImplementation(libs.test.android.compose.ui)
    androidTestImplementation(libs.test.android.compose.ui.tooling)
    androidTestImplementation(libs.test.android.compose.ui.manifest)
}